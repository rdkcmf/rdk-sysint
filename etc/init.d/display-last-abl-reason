#!/bin/sh
# ============================================================================
# RDK MANAGEMENT, LLC CONFIDENTIAL AND PROPRIETARY
# ============================================================================
# This file (and its contents) are the intellectual property of RDK Management, LLC.
# It may not be used, copied, distributed or otherwise  disclosed in whole or in
# part without the express written permission of RDK Management, LLC.
# ============================================================================
# Copyright (c) 2016 RDK Management, LLC. All rights reserved.
# ============================================================================

### BEGIN INIT INFO
# Provides:          display-last-abl-reason
# Should-Start:
# Required-Start:    dmesg-log-service
# Required-Stop:
# Default-Start:     3
# Default-Stop:
# Short-Description: 
### END INIT INFO
. /lib/rdk/init-functions

# Defaults can be overridden in this file
INIT_SCRIPT_DEFAULTS_FILE=""

# Load alternate configuration if exists
if [ -f $INIT_SCRIPT_DEFAULTS_FILE ]; then
     . $INIT_SCRIPT_DEFAULTS_FILE
fi

# Defaults
INIT_SCRIPT_NAME="DISPLAY LAST ABL REASON"       # full path to the executable
INIT_SCRIPT_EXECUTABLE=""                        # options to pass to the executable 
INIT_SCRIPT_OPTIONS=""                           # a decriptive name 
INIT_SCRIPT_HOMEDIR="/"                          # place where to cd before running
INIT_SCRIPT_PIDFILE=""                           # pid file name
INIT_SCRIPT_LOGFILE="ABLReason.txt"              # log file name 
INIT_SLEEPTIME=""                                # how long to wait for startup and shutdown

LOG_FILE="/var/log/ABLReason.txt" 

start_function() {
    pre_start "$INIT_SCRIPT_LOGFILE" ">>"
    #Advanced Boot loader check for previous response
    RESPONSE=`cat /proc/cmdline | tr -s " " | expand | tr -s " " | awk  '{n=split($0,a," "); for (i=1; i<=n; i++) print a[i]}' | grep LAST_ABL | cut -d "="  -f2`
    if [ $? -ne 0 ]; then
         echo `/bin/timestamp` LAST_ABL parameter is not found in /proc/cmdline >> $LOG_FILE
    else
         case $RESPONSE in
            0)   echo `/bin/timestamp` ABL_RESPONSE_CODE=$RESPONSE ABL_RESPONSE_NEVER  We have never been in the ABL >> $LOG_FILE
         ;;
            1)   echo `/bin/timestamp` ABL_RESPONSE_CODE=$RESPONSE ABL_RESPONSE_BADDB  The database was corrupt >> $LOG_FILE
         ;;
            2)   echo `/bin/timestamp` ABL_RESPONSE_CODE=$RESPONSE ABL_RESPONSE_REVERTED We reverted but there was no good image - strike out  >> $LOG_FILE  
         ;;
            3)   echo `/bin/timestamp` ABL_RESPONSE_CODE=$RESPONSE ABL_RESPONSE_NOIMAGE Both banks were scrubbed \(cold init etc.. \) >> $LOG_FILE
         ;;
            4)   echo `/bin/timestamp` ABL_RESPONSE_CODE=$RESPONSE ABL_RESPONSE_MANUAL  The ABL was launched by holding the buttons >> $LOG_FILE
         ;;
            5)   echo `/bin/timestamp` ABL_RESPONSE_CODE=$RESPONSE ABL_RESPONSE_BOOTINFO We did not know what to do so we ran the ABL \(Debug redboot would run CLI\) >> $LOG_FILE
         ;;
            6)   echo `/bin/timestamp` ABL_RESPONSE_CODE=$RESPONSE ABL_RESPONSE_SCRIPT  We could not create a viable boot script \(Debug redboot would run CLI\) >> $LOG_FILE
         ;;
            7)   echo `/bin/timestamp` ABL_RESPONSE_CODE=$RESPONSE ABL_RESPONSE_BADCONFIG Bad fconfig >> $LOG_FILE
         ;;
            *)   echo `/bin/timestamp` ABL_RESPONSE_CODE=$RESPONSE UNKNOWN RESPONSE >> $LOG_FILE
         ;;
  esac
fi
    post_start $?
}

stop_function() {
    pre_stop
    post_stop 0
}
 
case "$1" in
  start)
    start_function
    ;;
  stop)
    stop_function
    ;;
  restart)
    $0 stop && $0 start
    ;;
  *)
    echo "Usage: $0 {start|stop|restart}"
    exit 1
  ;;
esac

