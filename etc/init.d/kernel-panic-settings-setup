#!/bin/sh
# ============================================================================
# RDK MANAGEMENT, LLC CONFIDENTIAL AND PROPRIETARY
# ============================================================================
# This file (and its contents) are the intellectual property of RDK Management, LLC.
# It may not be used, copied, distributed or otherwise  disclosed in whole or in
# part without the express written permission of RDK Management, LLC.
# ============================================================================
# Copyright (c) 2016 RDK Management, LLC. All rights reserved.
# ============================================================================

### BEGIN INIT INFO
# Provides:          kernel-panic-settings-setup
# Required-Start:    dump-backup-service
# Should-Start:      
# Required-Stop:
# Default-Start:     3
# Default-Stop:
# Short-Description: 
### END INIT INFO
. /lib/rdk/init-functions

# Defaults can be overridden in this file
INIT_SCRIPT_DEFAULTS_FILE="/etc/include.properties"

# Load alternate configuration if exists
if [ -f $INIT_SCRIPT_DEFAULTS_FILE ]; then
     . $INIT_SCRIPT_DEFAULTS_FILE
fi

# Defaults
INIT_SCRIPT_NAME="KERNEL PANIC SETUP"              # full path to the executable
INIT_SCRIPT_EXECUTABLE=""                          # options to pass to the executable 
INIT_SCRIPT_OPTIONS=""                             # a decriptive name 
INIT_SCRIPT_HOMEDIR="/"                            # place where to cd before running
INIT_SCRIPT_PIDFILE=""                             # pid file name
INIT_SCRIPT_LOGFILE="applications.log"             # log file name 
INIT_SLEEPTIME=""                                  # how long to wait for startup and shutdown

. /etc/device.properties
 
start_function() {
    pre_start "$INIT_SCRIPT_LOGFILE" ">>"

    if [ -f /proc/sys/kernel/panic ];then
          echo 35 > /proc/sys/kernel/panic
    fi
    if [ -f /proc/sys/kernel/panic_on_oops ];then
          echo 35 > /proc/sys/kernel/panic_on_oops
    fi
    if [ -f /proc/sys/kernel/panic_on_unrecovered_nmi ];then
          echo 35 > /proc/sys/kernel/panic_on_unrecovered_nmi
    fi
    if [ "$SOC" = "BRCM" ] && [ -f /proc/sys/vm/panic_on_oom ];then
          echo 1 > /proc/sys/vm/panic_on_oom
    fi
    post_start 0
}

stop_function() {
    pre_stop
    post_stop 0
}
 
case "$1" in
  start)
    start_function
    ;;
  stop)
    stop_function
    ;;
  restart)
    $0 stop && $0 start
    ;;
  *)
    echo "Usage: $0 {start|stop|restart}"
    exit 1
  ;;
esac

