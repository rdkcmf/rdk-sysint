#!/bin/sh
##############################################################################
# If not stated otherwise in this file or this component's LICENSE file the
# following copyright and licenses apply:
#
# Copyright 2020 RDK Management
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
##############################################################################


### BEGIN INIT INFO
# Provides:          pod-service 
# Should-Start:
# Required-Start:    vod-service
# Required-Stop:
# Default-Start:     3
# Default-Stop:
# Short-Description: 
### END INIT INFO
. /lib/rdk/init-functions

# Defaults can be overridden in this file
INIT_SCRIPT_DEFAULTS_FILE="/etc/include.properties"

# Load alternate configuration if exists
if [ -f $INIT_SCRIPT_DEFAULTS_FILE ]; then
     . $INIT_SCRIPT_DEFAULTS_FILE
fi

# Defaults
INIT_SCRIPT_NAME="POD"                               # full path to the executable
INIT_SCRIPT_EXECUTABLE=""                            # options to pass to the executable 
INIT_SCRIPT_OPTIONS=""                               # a decriptive name 
INIT_SCRIPT_HOMEDIR="/"                              # place where to cd before running
INIT_SCRIPT_PIDFILE=""                               # pid file name
INIT_SCRIPT_LOGFILE="applications.log"               # log file name 
INIT_SLEEPTIME=""                                    # how long to wait for startup and shutdown

. /etc/device.properties
. /etc/env_setup.sh

isSeparateLog=FALSE
dbgenvPath=/mnt/nfs/env/debug.ini
if [ -f $PERSISTENT_PATH/debug.ini ] && [ "$BUILD_TYPE" != "prod" ] ; then
      dbgenvPath=$PERSISTENT_PATH/debug.ini                      
fi
if [ -f $dbgenvPath ]; then
     isSeparateLog=`grep "SEPARATE.LOGFILE.SUPPORT" "$dbgenvPath" | cut -d '=' -f2`  
fi

if [ "$LIGHTSLEEP_ENABLE" = "true" ]; then                                                      
     if [ "$isSeparateLog" = "TRUE" ] ; then                                                    
           echo "RDK separate log: is enabled"
           LOG_FILE=$LOG_PATH/pod_log.txt                                                    
           LOG_PIPE="$TEMP_LOG_PATH/pipe_pod_log"                                            
           count1=`find $TEMP_LOG_PATH -name pipe_pod_log -type f`
           if [ "$count1" != "" ]; then
                cat $LOG_PIPE >> $LOG_FILE
                echo "$LOG_PIPE is not a pipe" >> $LOG_PATH/lightsleep.log
                rm -rf $LOG_PIPE
           fi                                            
     else                                                                                       
           LOG_FILE=$LOG_PATH/ocapri_log.txt                                                    
           LOG_PIPE="$TEMP_LOG_PATH/pipe_ocapri_log"  
           count1=`find $TEMP_LOG_PATH -name pipe_ocapri_log -type f`
           if [ "$count1" != "" ]; then
                cat $LOG_PIPE >> $LOG_FILE
                echo "$LOG_PIPE is not a pipe" >> $LOG_PATH/lightsleep.log
                rm -rf $LOG_PIPE
           fi                                          
     fi                                                                                         
     mkfifo $LOG_PIPE &> /dev/null
     # Checking the logging path before startup                                           
     value=`ps | grep $LOG_PIPE | grep -v grep`                                       
     if [ "$value" = "" ]; then                                                           
           cat $LOG_PIPE >> $LOG_FILE &                                                    
     fi                                                                                   
else                                                                                            
     if [ "$isSeparateLog" = "TRUE" ] ; then                                                    
          echo "RDK separate log: is enabled"
          LOG_PIPE=$LOG_PATH/pod_log.txt                                                    
     else                                                                                       
          LOG_PIPE=$LOG_PATH/ocapri_log.txt                                                    
     fi                                                                       
fi 

start_function() {
    pre_start "$INIT_SCRIPT_LOGFILE" ">>"
    # Call the module starter with module name and the utility script
    sh /lib/rdk/module-starter "POD" "$LOG_PIPE" runPod.sh &
    post_start $?
}

stop_function() {
    pre_stop
    killall runPod
    sh /lib/rdk/processPID.sh /var/logs/pipe_pod_log | xargs kill -9
    sh /lib/rdk/processPID.sh /var/logs/pipe_ocapri_log | xargs kill -9
    post_stop 0
}
 
case "$1" in
  start)
    start_function
    ;;
  stop)
    stop_function
    ;;
  restart)
    $0 stop && $0 start
    ;;
  *)
    echo "Usage: $0 {start|stop|restart}"
    exit 1
  ;;
esac

