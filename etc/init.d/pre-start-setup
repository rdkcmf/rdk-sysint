#!/bin/sh
# ============================================================================
# RDK MANAGEMENT, LLC CONFIDENTIAL AND PROPRIETARY
# ============================================================================
# This file (and its contents) are the intellectual property of RDK Management, LLC.
# It may not be used, copied, distributed or otherwise  disclosed in whole or in
# part without the express written permission of RDK Management, LLC.
# ============================================================================
# Copyright (c) 2016 RDK Management, LLC. All rights reserved.
# ============================================================================

### BEGIN INIT INFO
# Provides: pre-start-setup
# Required-Start: 
# Required-Stop:
# Default-Start:     3
# Default-Stop:
# Short-Description: 
### END INIT INFO
. /lib/rdk/init-functions

# Defaults can be overridden in this file
INIT_SCRIPT_DEFAULTS_FILE="/etc/include.properties"

# Load alternate configuration if exists
if [ -f $INIT_SCRIPT_DEFAULTS_FILE ]; then
     . $INIT_SCRIPT_DEFAULTS_FILE
fi

# Defaults
INIT_SCRIPT_NAME="PRE-START-SETUP"             # full path to the executable
INIT_SCRIPT_EXECUTABLE=""                      # options to pass to the executable 
INIT_SCRIPT_OPTIONS=""                         # a decriptive name 
INIT_SCRIPT_HOMEDIR="/"                        # place where to cd before running
INIT_SCRIPT_PIDFILE=""                         # pid file name
INIT_SCRIPT_LOGFILE="system.log"               # log file name 
INIT_SLEEPTIME=""                              # how long to wait for startup and shutdown

start_function() {
    pre_start "$INIT_SCRIPT_LOGFILE" ">>" 

    export PS1='# '
    if [ ! -z "$BASH_VERSION" ]; then
         # Recovery from missing /dev/console (works on bash but not ash)
         exec < /dev/console >& /dev/console
    fi

    # Don't let SCHED_FIFO / SCHED_RR realtime threads get preempted
    echo -1 > /proc/sys/kernel/sched_rt_runtime_us

    if [ -f /etc/profile ]; then
        . /etc/profile
    fi
    # GPLv3 warning                                                                                        
    if [ -e /bin/gdbserver -o -e /bin/gdb ]; then
        echo "* WARNING: THIS STB CONTAINS GPLv3 SOFTWARE"                                             
        echo "* GPLv3 programs must be removed in order to enable security."                           
        echo "* See: http://www.gnu.org/licenses/gpl-faq.html#Tivoization"                             
    fi
    # Fake successful run of disk check scripts
    echo pass > /tmp/internal-disk-status

    buildTime=`grep BUILD_TIME /version.txt | cut -d "=" -f2|sed -e 's/\"//g'`
    if [ "$buildTime" ];then
        echo "Default Time Setup: $buildTime"
        date -s "$buildTime"
    else
        date -s 2001.01.01-00:00:00
    fi

    post_start $?
}

stop_function() {
    pre_stop
    post_stop 0
}
 
case "$1" in
  start)
    start_function
    ;;
  stop)
    stop_function
    ;;
  restart)
    $0 stop && $0 start
    ;;
  *)
    echo "Usage: $0 {start|stop|restart}"
    exit 1
  ;;
esac
