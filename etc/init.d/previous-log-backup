#!/bin/sh
##############################################################################
# If not stated otherwise in this file or this component's LICENSE file the
# following copyright and licenses apply:
#
# Copyright 2020 RDK Management
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
##############################################################################


### BEGIN INIT INFO
# Provides:          previous-log-backup 
# Should-Start:
# Required-Start:    disk_check tvmode_daemon_init
# Required-Stop:
# Default-Start:     3
# Default-Stop:
# Short-Description: 
### END INIT INFO
. /lib/rdk/init-functions

# Defaults can be overridden in this file
INIT_SCRIPT_DEFAULTS_FILE="/etc/include.properties"

# Load alternate configuration if exists
if [ -f $INIT_SCRIPT_DEFAULTS_FILE ]; then
     . $INIT_SCRIPT_DEFAULTS_FILE
fi

# Defaults
INIT_SCRIPT_NAME="LOGS BACKUP"                       # full path to the executable
INIT_SCRIPT_EXECUTABLE=""                            # options to pass to the executable 
INIT_SCRIPT_OPTIONS=""                               # a decriptive name 
INIT_SCRIPT_HOMEDIR="/"                              # place where to cd before running
INIT_SCRIPT_PIDFILE=""                               # pid file name
INIT_SCRIPT_LOGFILE="applications.log"               # log file name 
INIT_SLEEPTIME=""                                    # how long to wait for startup and shutdown
 
start_function() {
    pre_start "$INIT_SCRIPT_LOGFILE" ">>"
    ret=0
    # Creating the log backup folders
    if [ ! -d $LOG_PATH ]; then mkdir -p $LOG_PATH; fi
    if [ ! -d $LOG_PATH/PreviousLogs ]; then mkdir -p $LOG_PATH/PreviousLogs; fi
    if [ ! -d $LOG_PATH/PreviousLogs_backup ]; then mkdir -p $LOG_PATH/PreviousLogs_backup; fi
    rm -rf $LOG_PATH/PreviousLogs_backup/*
    # Backup the previous cycle logs
    if [ -f $RDK_PATH/backupLogs.sh ]; then
         $RDK_PATH/backupLogs.sh 
    else
         echo "Missing $RDK_PATH/backupLogs.sh..!"
         ret=1
    fi
    # Copying the current version in the log path
    if [ -f /version.txt ]; then
         cp /version.txt $LOG_PATH/
    else
         echo "Missing /version.txt"
         ret=2
    fi
    touch $PERSISTENT_PATH/logFileBackup
    post_start $ret
}

stop_function() {
    pre_stop
    post_stop 0
}
 
case "$1" in
  start)
    start_function
    ;;
  stop)
    stop_function
    ;;
  restart)
    $0 stop && $0 start
    ;;
  *)
    echo "Usage: $0 {start|stop|restart}"
    exit 1
  ;;
esac

