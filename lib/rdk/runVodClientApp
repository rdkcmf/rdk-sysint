#!/bin/sh
# ============================================================================
# RDK MANAGEMENT, LLC CONFIDENTIAL AND PROPRIETARY
# ============================================================================
# This file (and its contents) are the intellectual property of RDK Management, LLC.
# It may not be used, copied, distributed or otherwise  disclosed in whole or in
# part without the express written permission of RDK Management, LLC.
# ============================================================================
# Copyright (c) 2016 RDK Management, LLC. All rights reserved.
# ============================================================================
. /etc/include.properties
. /etc/device.properties

sigup_function()
{
    echo "$(basename $0), sigup_function caught error on Line: $1, Command: $2"
    touch /tmp/.vodClient_started
}
trap 'sigup_function $LINENO $BASH_COMMAND EXIT' SIGHUP 

sigint_function()
{
    echo "$(basename $0), sigint_function caught error on Line: $1, Command: $2"
    touch /tmp/.vodClient_started
}
trap 'sigint_function $LINENO $BASH_COMMAND EXIT' SIGINT 

sigquit_function()
{
    echo "$(basename $0), sigquit_function caught error on Line: $1, Command: $2"
    touch /tmp/.vodClient_started
}
trap 'sigquit_function $LINENO $BASH_COMMAND EXIT' SIGQUIT 
sigkill_function()
{
    echo "$(basename $0), sigkill_function caught error on Line: $1, Command: $2"
    touch /tmp/.vodClient_started
}
trap 'sigkill_function $LINENO $BASH_COMMAND EXIT' SIGKILL 
sigpipe_function()
{
    echo "$(basename $0),sigpipe_function caught error on Line: $1, Command: $2"
    touch /tmp/.vodClient_started
}
trap 'sigpipe_function $LINENO $BASH_COMMAND EXIT' SIGPIPE

exit_function()
{
    echo "$(basename $0), vod exit_function..!"
    touch /tmp/.vodClient_started
}

trap exit_function EXIT

LD_LIBRARY_PATH=/opt/hold:/lib:/usr/local/Qt/lib:/usr/local/lib:/mnt/nfs/gstreamer-plugins:/mnt/nfs/bin/target-snmp/lib:/mnt/nfs/env/vod:/mnt/nfs/lib:$LD_LIBRARY_PATH
GST_PLUGIN_PATH=/lib/gstreamer-0.10:/usr/local/lib/gstreamer-0.10:/mnt/nfs/gstreamer-plugins:/mnt/nfs/env/vod
export GST_PLUGIN_PATH GST_PLUGIN_SCANNER GST_REGISTRY
export PATH HOME LD_LIBRARY_PATH
ulimit -c unlimited

if [ -f $PERSISTENT_PATH/rmfconfig.ini ] && [ "$BUILD_TYPE" != "prod" ] ; then
     export rmfConfigFile=$PERSISTENT_PATH/rmfconfig.ini
else
     export rmfConfigFile=/etc/rmfconfig.ini
fi
if [ -f $PERSISTENT_PATH/debug.ini ] && [ "$BUILD_TYPE" != "prod" ] ; then
      export debugConfigFile=$PERSISTENT_PATH/debug.ini
else
      export debugConfigFile=/etc/debug.ini
fi

loop=1
while [ $loop -eq 1 ]
do
     if [ "$IPV6_ENABLED" = "true" ]; then
           if [ ! -f /tmp/estb_ipv4 ] && [ ! -f /tmp/estb_ipv6 ]; then
                sleep 15
           else
               if [ -f /tmp/estb_ipv6 ]; then
                    export estbIp=estb_ipv6
               else
                    export estbIp=estb_ipv4
               fi
               loop=0
           fi
     else
           loop=0
     fi
done

cd /mnt/nfs/env/vod
# check for device specific setup script and invoke the process
if [ -f /etc/run.sh ]; then
     echo "starting vodClientApp with $estbIp"
     /etc/run.sh ./vodClientApp --config $rmfConfigFile --debugconfig $debugConfigFile --ip $estbIp &

else
     echo "starting vodClientApp with $estbIp"
     ./vodClientApp --config $rmfConfigFile --debugconfig $debugConfigFile --ip $estbIp &
fi
